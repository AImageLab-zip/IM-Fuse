# Virtual environment directories
/ShaSpec_venv/
/m3ae_venv/
/mamba_venv/
/nnunet_venv/
/uhved_python/

# Data



# Bash files
bash.sh
bash_pycharm.sh
/slurm_templates/

# Log files and directories
/runs/
/slurm_out/
/wandb/

# IMFuse
/IMFuse/output*
/IMFuse/mambaFusion_speranza_dev.py
/IMFuse/*sh
/IMFuse/*.csv
/IMFuse/count_params.py
/IMFuse/test_fusionCat.py
/IMFuse/test_mam.py
/IMFuse/wandb/
/causal-conv1d/
install_mamba.sh
/IMFuse/datalist/name_list.txt
/IMFuse/datalist/test.txt
/IMFuse/datalist/test15splits2.csv
/IMFuse/datalist/val.txt


# M3AE
/m3ae/runs/
/m3ae/wandb/
/m3ae/dataset/*.txt
/m3ae/*.sh
/m3ae/dataset/datalist/name_list.txt
/m3ae/dataset/datalist/test.txt
/m3ae/dataset/datalist/test15splits2.csv
/m3ae/dataset/datalist/test15splits.csv
/m3ae/dataset/datalist/val.txt
/m3ae/dataset/datalist/val15splits.csv
/m3ae/.git.backup/
/m3ae/count_parameters.py


# mmFormer
/mmFormer/output*
/mmFormer/.gitignore
/mmFormer/wandb/
/mmFormer/outputs/
/mmFormer/.git.backup/
/mmFormer/*.sh
/mmFormer/mmformer/*m5*
/mmFormer/mmformer/job.sh
/mmFormer/mmformer/save_crop_indices.py
/mmFormer/mmformer/count_parameters.py
/mmFormer/mmformer/datalist/test15splits2.csv
/mmFormer/mmformer/datalist/test.txt
/mmFormer/mmformer/datalist/val.txt
/mmFormer/mmformer/test_m5former.py
/mmFormer/mmformer/finetuning_m5former.py


# Missing as Masking
/MaM/.github
/MaM/*.egg-info/
/MaM/create_splits_json.py
/MaM/*.sh

# RobustSeg
/RobustSeg/output_RobustSeg300.txt
/RobustSeg/count_params.py
/RobustSeg/outputs/

# SFusion
/SFusion/output*
/SFusion/outputs
/SFusion/datalist/Brats18_test3.txt
/SFusion/datalist/Brats18_val15splits.csv
/SFusion/datalist/Brats18_test15splits.csv
/SFusion/datalist/train2.txt


#ShaSpec
/ShaSpec/.git.backup/
/ShaSpec/datalist/BraTS18/
/ShaSpec/outputs/
/ShaSpec/snapshots/
/ShaSpec/wandb/
/ShaSpec/count_parameters.py

# UHVED
/UHVED/.gitignore
/UHVED/hist.txt
/UHVED/UHEMIS.py
/UHVED/output*
/UHVED/preprocess.py
/UHVED/preprocess_norm.py
/UHVED/train_uhemis.py



# Other files/directories
crop_indices.csv
note.txt
reorder_mask.py
smu2.csv
split_set.py
.git.backup/
wandb/


############## From here files taken from https://github.com/github/gitignore/blob/main/Python.gitignore ##############
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# UV
#   Similar to Pipfile.lock, it is generally recommended to include uv.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#uv.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/latest/usage/project/#working-with-version-control
.pdm.toml
.pdm-python
.pdm-build/

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

# Ruff stuff:
.ruff_cache/

# PyPI configuration file
.pypirc